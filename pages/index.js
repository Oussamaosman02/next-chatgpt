import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useRef, useState } from 'react'

export default function Home () {
  const refPre = useRef()
  const [conver, setConver] = useState([{ role: 'system', content: 'Eres una inteligencia artificial.' }])
  const [esp, setEsp] = useState('')
  async function handleSubmit (e) {
    e.preventDefault()
    setEsp('Generando respuesta')
    const pregunta = refPre.current.value
    const datoss = [...conver, { role: 'user', content: pregunta }]
    setConver(datoss)
    const res = await fetch('/api', {
      method: 'POST',
      headers: {
        'Content-type': 'application/json'
      },
      body: JSON.stringify(datoss)
    })
    res.json().then((result) => {
      const data = result.result.choices[0].message.content
      setConver([...datoss, { role: 'assistant', content: data }])
    }
    )
    setEsp('')
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <form style={{ display: 'flex', gap: '10px' }} onSubmit={(e) => handleSubmit(e)}>
          <textarea style={{ padding: '10px' }} placeholder='Mensaje' ref={refPre} />
          <button style={{ padding: '3px' }}>Enviar</button>
        </form>
        <ul style={{ padding: '5px', overflow: 'auto' }}>
          {
            conver.map((rp, i) => {
              let bg
              if (rp.role === 'user') {
                bg = 'navy'
              } else if (rp.role === 'assistant') {
                bg = 'gray'
              } else {
                bg = 'transparent'
              }
              return (
                <li style={{ backgroundColor: bg, color: 'white', padding: '5px', display: rp.role === 'system' ? 'none' : 'flex' }} key={i}>
                  {
                    rp.content
                  }
                </li>
              )
            })
          }
        </ul>
        <p className={styles.mess}>
          {esp}
        </p>
      </main>
    </>
  )
}
